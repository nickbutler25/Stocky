name: Run Stocky Tee Times Daily - Eddie

on:
  schedule:
    - cron: '30 16 * * 4,5'  # Runs at 5:30 PM UTC on Thursdays and Fridays
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-app:
    runs-on: ubuntu-latest

    if: ${{ vars.EDDIE_SHOULD_RUN == 'true' }}  # Only run if SHOULD_RUN is true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'


      # Install Google Chrome
      - name: Install Google Chrome
        run: |
          wget -q -O - https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb > chrome.deb
          sudo dpkg -i chrome.deb
          sudo apt --fix-broken install -y

      # Install Python dependencies (webdriver-manager will handle ChromeDriver automatically)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Wait until 5:58 PM UTC before running the Python script
      - name: Wait until 5:58 PM UTC
        run: |
          # Get the current UTC time in seconds since epoch
          CURRENT_TIME=$(date +%s)
          
          # Set target time for 5:58 PM UTC in seconds since epoch
          TARGET_HOUR=16
          TARGET_MINUTE=58
          TARGET_SECOND=0
          TARGET_TIME=$(date -d "today ${TARGET_HOUR}:${TARGET_MINUTE}:${TARGET_SECOND}" +%s)
          
          # If the current time is after 5:58 PM, run the script immediately
          if [ $CURRENT_TIME -gt $TARGET_TIME ]; then
            echo "Current time ($CURRENT_TIME) is after 5:58 PM UTC. Running the script now."
            exit 0  # Exit early to run the Python script immediately
          fi

          # If it's not yet 5:58 PM, calculate the wait time
          WAIT_TIME=$((TARGET_TIME - CURRENT_TIME))
          echo "Current time: $CURRENT_TIME, Target time: $TARGET_TIME, Waiting for $WAIT_TIME seconds."
          
          # Wait until the target time (5:58 PM UTC)
          sleep $WAIT_TIME
          

      # Run Python script
      - name: Run Python script
        run: |
          # Run the second instance of the Python script with the second set of parameters
          python program.py '{"username": "${{ vars.EDDIE_USER }}", "password": "${{ secrets.EDDIE_PASSWORD }}", "time_to_book": "${{ vars.EDDIE_SATURDAY_TIME }}"
          , "min_time": "${{ vars.SATURDAY_MIN_TIME }}", "max_time": "${{ vars.SATURDAY_MAX_TIME }}"}'
